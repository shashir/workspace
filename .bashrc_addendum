#  Shamelessly stolen from other people, especially ajprax.

#  Customize BASH PS1 prompt to show current GIT repository and branch.
#  by Mike Stewart - http://MediaDoneRight.com

#  SETUP CONSTANTS
#  Bunch-o-predefined colors.  Makes reading code easier than escape sequences.
#  I don't remember where I found this.  o_O

# Reset
Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

# Bold
BBlack="\[\033[1;30m\]"       # Black
BRed="\[\033[1;31m\]"         # Red
BGreen="\[\033[1;32m\]"       # Green
BYellow="\[\033[1;33m\]"      # Yellow
BBlue="\[\033[1;34m\]"        # Blue
BPurple="\[\033[1;35m\]"      # Purple
BCyan="\[\033[1;36m\]"        # Cyan
BWhite="\[\033[1;37m\]"       # White

# Underline
UBlack="\[\033[4;30m\]"       # Black
URed="\[\033[4;31m\]"         # Red
UGreen="\[\033[4;32m\]"       # Green
UYellow="\[\033[4;33m\]"      # Yellow
UBlue="\[\033[4;34m\]"        # Blue
UPurple="\[\033[4;35m\]"      # Purple
UCyan="\[\033[4;36m\]"        # Cyan
UWhite="\[\033[4;37m\]"       # White

# Background
On_Black="\[\033[40m\]"       # Black
On_Red="\[\033[41m\]"         # Red
On_Green="\[\033[42m\]"       # Green
On_Yellow="\[\033[43m\]"      # Yellow
On_Blue="\[\033[44m\]"        # Blue
On_Purple="\[\033[45m\]"      # Purple
On_Cyan="\[\033[46m\]"        # Cyan
On_White="\[\033[47m\]"       # White

# High Intensty
IBlack="\[\033[0;90m\]"       # Black
IRed="\[\033[0;91m\]"         # Red
IGreen="\[\033[0;92m\]"       # Green
IYellow="\[\033[0;93m\]"      # Yellow
IBlue="\[\033[0;94m\]"        # Blue
IPurple="\[\033[0;95m\]"      # Purple
ICyan="\[\033[0;96m\]"        # Cyan
IWhite="\[\033[0;97m\]"       # White

# Bold High Intensty
BIBlack="\[\033[1;90m\]"      # Black
BIRed="\[\033[1;91m\]"        # Red
BIGreen="\[\033[1;92m\]"      # Green
BIYellow="\[\033[1;93m\]"     # Yellow
BIBlue="\[\033[1;94m\]"       # Blue
BIPurple="\[\033[1;95m\]"     # Purple
BICyan="\[\033[1;96m\]"       # Cyan
BIWhite="\[\033[1;97m\]"      # White

# High Intensty backgrounds
On_IBlack="\[\033[0;100m\]"   # Black
On_IRed="\[\033[0;101m\]"     # Red
On_IGreen="\[\033[0;102m\]"   # Green
On_IYellow="\[\033[0;103m\]"  # Yellow
On_IBlue="\[\033[0;104m\]"    # Blue
On_IPurple="\[\033[10;95m\]"  # Purple
On_ICyan="\[\033[0;106m\]"    # Cyan
On_IWhite="\[\033[0;107m\]"   # White

# Various variables you might want for your PS1 prompt instead
Time24h="\t "
Time12h="\T"
Time12a="\@"
PathShort="\w"
PathFull="\W"
NewLine="\n"
Jobs="\j "
Date="\d"
History="\!"

export PS1=$Red`printf '                                                  \n\r' | tr ' ' -`$Yellow$Jobs$Blue$Time24h$Date$Color_Off' \u@\h$(git branch &>/dev/null;\
if [ $? -eq 0 ]; then \
  echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
  if [ "$?" -eq "0" ]; then \
    # @4 - Clean repository - nothing to commit
    echo "'$Green'"$(__git_ps1 " (%s)"); \
  else \
    # @5 - Changes to working tree
    echo "'$Red'"$(__git_ps1 " (%s)"); \
    fi) '$Color_Off$PathShort'\n'$Green$History$Blue' >> '$Color_Off'"; \
  else \
    # @2 - Prompt when not in GIT repo
    echo " '$PathShort'\n'$Green$History$Blue' >> '$Color_Off'"; \
  fi)'

# increase ram allocated to Maven
export MAVEN_OPTS="-XX:PermSize=2G -Xmx2G"

#source bento
source ~/opt/kiji-bento/bin/kiji-env.sh > /dev/null

# alias vpn
alias wibivpn='sudo openvpn --script-security 3 system  --config ~/bin/client.ovpn'

#!/bin/bash
function vifi {
  vim $(find -name $1)
}

#git aliases
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/'
}
alias gitmom='git merge --ff-only origin/master'
alias githome='git push ajprax `parse_git_branch`'
alias gita='git commit -a'
alias gitaa='git commit -a --amend'
alias gitb='git checkout -b'
alias gitc='git checkout'
alias gitf='git fetch --all'
alias gitff='git merge --ff-only'
alias gitr='git rebase'
alias gitrc='git rebase --continue'
alias gits='git status'
alias gitu='git fetch --all && git checkout master && git merge --ff-only origin/master'
alias gka='gitk --all &'

function gituall {
  for i in $(ls) ; do
    echo "$i"
    if [ -d "$i" ]; then
      cd $i
      gitu
      cd -
    fi
  done
}

function loop {
  for i in $(eval echo "{1..$1}") ; do
    echo $i
    $2
    if [ $? -ne 0 ]; then
      break
    fi
  done
}

#post-review alias
alias post='post-review -o --branch=master --guess-summary --guess-description --bugs-closed=`parse_git_branch`'
alias postr='post-review -o -r'

#IntelliJ alias
alias ij='~/bin/idea &'
#PyCharm alias
alias pc='~/bin/pycharm &'

#Maven aliases
alias mcv='mvn clean verify'
alias mcvst='mvn clean verify -DskipTests'
alias mcc='mvn clean compile'
alias mct='mvn clean test'
alias mci='mvn clean install'
alias mcist='mvn clean install -DskipTests'
alias mregr='mvn versions:update-properties && mvn clean verify && mvn versions:revert'

#make git use vim for commit messages
export GIT_EDITOR="vim"

#kiji-review aliases
alias kri='kiji-review init'
alias krm='kiji-review mail'
alias kre='kiji-review export'
alias krep='kiji-review export --publish'
alias krs='kiji-review submit && git checkout master && git merge --ff-only origin/master'

#wibi devtools scripts
export PATH=$PATH:$HOME/src/wibi/devtools/bin/

#pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"


#alias arduino
alias arduino='sudo ~/bin/arduino-1.5.2/arduino'

#dart aliases
alias dart='~/bin/dart/DartEditor &'

#general aliases
alias c='clear'

#my scripts
export PATH=$PATH:$HOME/bin/

#Java
export JAVA_HOME=/usr/lib/jvm/java-7-oracle/jre

#docker alias
alias docker='sudo docker'

